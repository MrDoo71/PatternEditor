function t(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function e(t,e){for(var o=0;o<e.length;o++){var a=e[o];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}function o(t,o,a){return o&&e(t.prototype,o),a&&e(t,a),t}var a=function(){function e(o,a){t(this,e),this.type=o,this.text=a}return o(e,[{key:"typeis",value:function(t){return this.type===t}}]),e}();a.UNDEFINED=0,a.COMMAND=1,a.NUMBER=2,a.EOD=3;var r=function(){function e(o){t(this,e),null==o&&(o=""),this.setPathData(o)}return o(e,[{key:"setPathData",value:function(t){if("string"!=typeof t)throw new TypeError("The first parameter must be a string");this._pathData=t}},{key:"getNextToken",value:function(){for(var t=null,e=this._pathData;null===t;)if(null===e||""===e)t=new a(a.EOD,"");else if(e.match(/^([ \t\r\n,]+)/))e=e.substr(RegExp.$1.length);else if(e.match(/^([AaCcHhLlMmQqSsTtVvZz])/))t=new a(a.COMMAND,RegExp.$1),e=e.substr(RegExp.$1.length);else{if(!e.match(/^(([-+]?\d+(\.\d*)?|[-+]?\.\d+)([eE][-+]?\d+)?)/))throw new SyntaxError("Unrecognized path data: ".concat(e));t=new a(a.NUMBER,RegExp.$1),e=e.substr(RegExp.$1.length)}return this._pathData=e,t}}]),e}(),l=function(){function e(){t(this,e),this._lexer=new r,this._handler=null}return o(e,[{key:"parseData",value:function(t){if("string"!=typeof t)throw new TypeError("The first parameter must be a string: ".concat(t));null!==this._handler&&"function"==typeof this._handler.beginParse&&this._handler.beginParse();var o=this._lexer;o.setPathData(t);for(var r="BOP",l=null,n=o.getNextToken();!1===n.typeis(a.EOD);){var c=void 0,i=[];switch(n.type){case a.COMMAND:if("BOP"===r&&"M"!==n.text&&"m"!==n.text)throw new SyntaxError("New paths must begin with a moveto command. Found '".concat(n.text,"'"));r=n.text,c=e.PARAMCOUNT[n.text.toUpperCase()],n=o.getNextToken();break;case a.NUMBER:if("BOP"===r)throw new SyntaxError("New paths must begin with a moveto command. Found '".concat(n.text,"'"));c=e.PARAMCOUNT[r.toUpperCase()];break;default:throw new SyntaxError("Unrecognized command type: ".concat(n.type))}for(var s=0;s<c;s++){switch(n.type){case a.COMMAND:throw new SyntaxError("Parameter must be a number. Found '".concat(n.text,"'"));case a.NUMBER:i[s]=parseFloat(n.text);break;case a.EOD:throw new SyntaxError("Unexpected end of string");default:throw new SyntaxError("Unrecognized parameter type. Found type '".concat(n.type,"'"))}n=o.getNextToken()}if(null!==this._handler){var u=this._handler,h=e.METHODNAME[r];"a"!==r&&"A"!==r||(i[3]=0!==i[3],i[4]=0!==i[4]),null!==u&&"function"==typeof u[h]&&u[h].apply(u,i)}switch(r){case"M":r="L";break;case"m":r="l";break;case"Z":case"z":r="BOP"}if(n===l)throw new SyntaxError("Parser stalled on '".concat(n.text,"'"));l=n}null!==this._handler&&"function"==typeof this._handler.endParse&&this._handler.endParse()}},{key:"setHandler",value:function(t){this._handler=t}}]),e}();l.PARAMCOUNT={A:7,C:6,H:1,L:2,M:2,Q:4,S:4,T:2,V:1,Z:0},l.METHODNAME={A:"arcAbs",a:"arcRel",C:"curvetoCubicAbs",c:"curvetoCubicRel",H:"linetoHorizontalAbs",h:"linetoHorizontalRel",L:"linetoAbs",l:"linetoRel",M:"movetoAbs",m:"movetoRel",Q:"curvetoQuadraticAbs",q:"curvetoQuadraticRel",S:"curvetoCubicSmoothAbs",s:"curvetoCubicSmoothRel",T:"curvetoQuadraticSmoothAbs",t:"curvetoQuadraticSmoothRel",V:"linetoVerticalAbs",v:"linetoVerticalRel",Z:"closePath",z:"closePath"};var n=function(){function e(){t(this,e),this.logs=[]}return o(e,[{key:"log",value:function(t){for(var e=arguments.length,o=new Array(e>1?e-1:0),a=1;a<e;a++)o[a-1]=arguments[a];this.logs.push("".concat(t,"(").concat(o.join(","),")"))}},{key:"arcAbs",value:function(t,e,o,a,r,l,n){this.log.apply(this,["arcAbs"].concat(Array.prototype.slice.call(arguments)))}},{key:"arcRel",value:function(t,e,o,a,r,l,n){this.log.apply(this,["arcRel"].concat(Array.prototype.slice.call(arguments)))}},{key:"curvetoCubicAbs",value:function(t,e,o,a,r,l){this.log.apply(this,["curvetoCubicAbs"].concat(Array.prototype.slice.call(arguments)))}},{key:"curvetoCubicRel",value:function(t,e,o,a,r,l){this.log.apply(this,["curvetoCubicRel"].concat(Array.prototype.slice.call(arguments)))}},{key:"linetoHorizontalAbs",value:function(t){this.log.apply(this,["linetoHorizontalAbs"].concat(Array.prototype.slice.call(arguments)))}},{key:"linetoHorizontalRel",value:function(t){this.log.apply(this,["linetoHorizontalRel"].concat(Array.prototype.slice.call(arguments)))}},{key:"linetoAbs",value:function(t,e){this.log.apply(this,["linetoAbs"].concat(Array.prototype.slice.call(arguments)))}},{key:"linetoRel",value:function(t,e){this.log.apply(this,["linetoRel"].concat(Array.prototype.slice.call(arguments)))}},{key:"movetoAbs",value:function(t,e){this.log.apply(this,["movetoAbs"].concat(Array.prototype.slice.call(arguments)))}},{key:"movetoRel",value:function(t,e){this.log.apply(this,["movetoRel"].concat(Array.prototype.slice.call(arguments)))}},{key:"curvetoQuadraticAbs",value:function(t,e,o,a){this.log.apply(this,["curvetoQuadraticAbs"].concat(Array.prototype.slice.call(arguments)))}},{key:"curvetoQuadraticRel",value:function(t,e,o,a){this.log.apply(this,["curvetoQuadraticRel"].concat(Array.prototype.slice.call(arguments)))}},{key:"curvetoCubicSmoothAbs",value:function(t,e,o,a){this.log.apply(this,["curvetoCubicSmoothAbs"].concat(Array.prototype.slice.call(arguments)))}},{key:"curvetoCubicSmoothRel",value:function(t,e,o,a){this.log.apply(this,["curvetoCubicSmoothRel"].concat(Array.prototype.slice.call(arguments)))}},{key:"curvetoQuadraticSmoothAbs",value:function(t,e){this.log.apply(this,["curvetoQuadraticSmoothAbs"].concat(Array.prototype.slice.call(arguments)))}},{key:"curvetoQuadraticSmoothRel",value:function(t,e){this.log.apply(this,["curvetoQuadraticSmoothRel"].concat(Array.prototype.slice.call(arguments)))}},{key:"linetoVerticalAbs",value:function(t){this.log.apply(this,["linetoVerticalAbs"].concat(Array.prototype.slice.call(arguments)))}},{key:"linetoVerticalRel",value:function(t){this.log.apply(this,["linetoVerticalRel"].concat(Array.prototype.slice.call(arguments)))}},{key:"closePath",value:function(){this.log.apply(this,["closePath"].concat(Array.prototype.slice.call(arguments)))}}]),e}();export{r as PathLexer,l as PathParser,n as SampleHandler};
//# sourceMappingURL=index-esm.min.js.map
